@model BlackJack.ViewModels.GameServiceViewModels.StartGameView

@{
    ViewBag.Title = "Start new game";
}

<h2>Start new game</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DealerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="Dealers" name="DealerId" />
                @Html.ValidationMessageFor(model => model.DealerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlayerId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input id="players" name="PlayerId" class="k-list-scroller" />
                <input id="AddPlayer" name="NewPlayerName" type="hidden" />
                @Html.ValidationMessageFor(model => model.PlayerId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BotsNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BotsNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BotsNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Start game" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<script id="noDataTemplate" type="text/x-kendo-tmpl">
    <div>
        No data found. Do you want to add new item - '#: instance.text() #' ?
    </div>
    <br />
    <button class="k-button" onclick="addNew('#: instance.element[0].id #', '#: instance.text() #')">Add new item</button>
</script>
<script>
    function addNew(widgetId, value) {
        if (confirm("Are you sure?")) {
            $("#AddPlayer").val(value);
            $("players").val(0);
        }
    }

</script>

<script>
    $(document).ready(function () {
        var dealersDataSource = new kendo.data.DataSource({
            batch: true,
            transport: {
                read: {
                    url: "http://localhost:50183/Player/GetDealers",
                    dataType: "json"
                },
            },
            schema: {
                model: {
                    Id: "Id",
                    fields: {
                        Id: { type: "number" },
                        Name: { type: "string" }
                    }
                }
            }
        });        
        $("#Dealers").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: dealersDataSource
        });
        var playerDataSource = new kendo.data.DataSource({
            batch: true,
            transport: {
                read: {
                    url: "http://localhost:50183/Player/GetPlayers",
                    dataType: "json"
                }
            },
            schema: {
                model: {
                    Id: "Id",
                    fields: {
                        Id: { type: "number" },
                        Name: { type: "string" }
                    }
                }
            }
        });
        $("#players").kendoComboBox({
            filter: "startswith",
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: playerDataSource,
            noDataTemplate: $("#noDataTemplate").html()
        });
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
